
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	
 *	Class: 		MediaFrameworkAirTest
 *	Source: 	/Users/oconnell/src/strobe/dev/trunk/framework/MediaFrameworkAirTest/MediaFrameworkAirTest.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2009.05.22 10:57:23 PDT
 */

package 
{

import com.adobe.strobe.strobeunit.StrobeUnitTestApp;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.filters.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import flexunit.framework.TestSuite;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.styles.*;


[Frame(extraClass="_MediaFrameworkAirTest_FlexInit")]

[Frame(factoryClass="_MediaFrameworkAirTest_mx_managers_SystemManager")]



public class MediaFrameworkAirTest
	extends com.adobe.strobe.strobeunit.StrobeUnitTestApp
	implements mx.binding.IBindingClient
{




private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: com.adobe.strobe.strobeunit.StrobeUnitTestApp
})

    /**
     * @private
     **/
	public function MediaFrameworkAirTest()
	{
		super();

		mx_internal::_document = this;

		//	our style settings


		//	ambient styles
		mx_internal::_MediaFrameworkAirTest_StylesInit();

		//	properties
		this.logName = "MediaFrameworkAirTest";

		//	events

	}

    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _MediaFrameworkAirTest_bindingsSetup();
		var watchers:Array = [];

		var target:MediaFrameworkAirTest = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_MediaFrameworkAirTestWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}


			import org.openvideoplayer.*;
		



    //	supporting function definitions for properties, events, styles, effects

	//	binding mgmt
    private function _MediaFrameworkAirTest_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():flexunit.framework.TestSuite
            {
                return (new MediaFrameworkTests());
            },
            function(_sourceFunctionReturnValue:flexunit.framework.TestSuite):void
            {
				
                this.suite = _sourceFunctionReturnValue;
            },
            "this.suite");
        result[0] = binding;

        return result;
    }

    private function _MediaFrameworkAirTest_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (new MediaFrameworkTests());
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (MediaFrameworkAirTest)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;


	mx_internal static var _MediaFrameworkAirTest_StylesInit_done:Boolean = false;

	mx_internal function _MediaFrameworkAirTest_StylesInit():void
	{
		//	only add our style defs to the StyleManager once
		if (mx_internal::_MediaFrameworkAirTest_StylesInit_done)
			return;
		else
			mx_internal::_MediaFrameworkAirTest_StylesInit_done = true;

		var style:CSSStyleDeclaration;
		var effects:Array;


		StyleManager.mx_internal::initProtoChainRoots();
	}




}

}
